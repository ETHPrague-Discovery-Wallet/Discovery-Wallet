{
  "contractName": "DiscoveryAccountFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "_entryPoint",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "accountImplementation",
      "outputs": [
        {
          "internalType": "contract DiscoveryAccount",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "salt",
          "type": "uint256"
        }
      ],
      "name": "createAccount",
      "outputs": [
        {
          "internalType": "contract DiscoveryAccount",
          "name": "ret",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "salt",
          "type": "uint256"
        }
      ],
      "name": "getAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"accountImplementation\",\"outputs\":[{\"internalType\":\"contract DiscoveryAccount\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"createAccount\",\"outputs\":[{\"internalType\":\"contract DiscoveryAccount\",\"name\":\"ret\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAccount(address,uint256)\":{\"notice\":\"create an account, and return its address. returns the address even if the account is already deployed. Note that during UserOperation execution, this method is called only if the account is not deployed. This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation\"},\"getAddress(address,uint256)\":{\"notice\":\"calculate the counterfactual address of this account as it would be returned by createAccount()\"}},\"notice\":\"A sample factory contract for DiscoveryAccount A UserOperations \\\"initCode\\\" holds the address of the factory, and a method call (to createAccount, in this sample factory). The factory's createAccount returns the target account address even if it is already installed. This way, the entryPoint.getSenderAddress() can be called either before or after the account is created.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/DiscoveryAccountFactory.sol\":\"DiscoveryAccountFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1\",\"dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc5ff5c204604be7594ce2fa9100a0638f22b5aada6ebec1e165b0f50a48447\",\"dweb:/ipfs/QmfH7uWphPrq8jqwGvyh4pFnLEgEPmLwyGV2Bvx1Acjggh\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"project:/contracts/DiscoveryAccountFactory.sol\":{\"keccak256\":\"0xb66fb52e5542582890a67a1beecfc40780c4a5fe3c7ce147f0cdfbbc837cff62\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1214d86830d4277596ff236e4df4e58cc78d9768ae0b70879762d78bab31530c\",\"dweb:/ipfs/QmQejjSq8rYJXjYsxqqePv7ACX8CsKAAp4Y8DBiS19gaLJ\"]},\"project:/contracts/Discovery_Account/BaseAccount.sol\":{\"keccak256\":\"0xaf40796a780ddbc8e06d1f1391145b8f3bbd2536d96356eac886f3441f756f40\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ea4d1dcd0045b363e9879a58dc6ff4cd0b07ef7d460d3dd7957889542d49456c\",\"dweb:/ipfs/QmQVHNxZdrDiMBN2K9vDpnxWK9xvn17H2HwMajcDpt9o1C\"]},\"project:/contracts/Discovery_Account/DiscoveryAccount.sol\":{\"keccak256\":\"0x2d708e1142ca81db6d20741c42f4c1a4ae31d007d20a7e572133e3ca9ed89a73\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://eb00f4a240f0733690f0b752a6f0fdc04b5dbbea20bec9b46ea3d3afd08ebe5f\",\"dweb:/ipfs/QmVsx9Hd9eh3YEq26fETkymiN7zAzdvsxqF1ojeZ2qZuJo\"]},\"project:/contracts/Discovery_Account/TokenCallbackHandler.sol\":{\"keccak256\":\"0xea5b7d64f10bf898023cc905c394bf955e98935e7606e139d0fea1e35c3edd54\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://67df4a885a85300c3cf8faa9896d11e05e6b06e26032730bacb9e2fd8b7e686c\",\"dweb:/ipfs/QmX3RnBnmjB8BxoNEci1nYUdiW7sygVKmovohciDjpuYVd\"]},\"project:/contracts/interfaces/Helpers.sol\":{\"keccak256\":\"0xf0a79afc3bdf471fc34a6c2055c32299fa4f1cf815fdf1ae6d075d03782fe190\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2c5c3f284453c3938acec12e296634ce968be7ca983ccd824cbb72ba3b33dfec\",\"dweb:/ipfs/QmQAxtYxxJHZQx2po8gMQZk8sHmpvfGHzytK9B9AiXjhg7\"]},\"project:/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0xda122eeb0867ba38ef20d0131a374874f6819182fd2edcdf2f1b6bb6bc9558e3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://90264d0e13de572597b76cccdc915f8c665adab18226f2b4b43249c8096f7574\",\"dweb:/ipfs/QmPkaBt7DD97KdGMHqXHynjvsQasSeyoRMvgT2qiRicoTk\"]},\"project:/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x6cac6ca6301fb6d7430741bf9f77062cbc70e4bae972c8aded02c386d29c5dff\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3fd65a5fdbea5669cffe70baa34434aa6a18d16518a429127a6bc6ff4d71bf94\",\"dweb:/ipfs/QmboZzAHymyawDzMmGekNC2uMyzjutReTnmg8DpfJr8TQv\"]},\"project:/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xdaab7bf6da6cc01f17c22499fadfb01145c83424c9f0fb1965e6597e87123460\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://067eca09882db16aa9f27c75877efe000d767f63dfd2b33398c25152ab940a63\",\"dweb:/ipfs/QmZE6HcFwCCUfMzoyg4b1PgTaJz2E7AsBr41Q49RJDezEM\"]},\"project:/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x3d15a15a52cee58a5c40f98ec0016269edf6332be75fc01e9e39fcf4cdd22063\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c392df4b9fba7cd8d1db2f9992bde3c2289fa64dc1827eaff7c79e80752eb82e\",\"dweb:/ipfs/QmZ6VA8X59kZWy1LFVXmzXceWr1PknZKKVhg9cWPFf7F4G\"]},\"project:/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x6d85a9b18ce52877f590994101c2920390ae6ce1721e3672f5b2341e720a70ae\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://578d63f4c1a4e91e7356eaf8f7ef565f435af6736c1bf0932da35b2d2327f80c\",\"dweb:/ipfs/QmY7mGTBb4uYYsh75KiEVSNBfepKq5pgSMNbzjjWMabGpJ\"]},\"project:/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0xbca33333378950399cd413760636eab53c1a9327ff082d12d4df91d92d8cdf22\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2b4ac70a4154e841a1318126bb4ef9ef9b505eb87ebaca318a847465a4f90dc0\",\"dweb:/ipfs/QmcLJBRk3ZjKq6TWYxaLqR4peVws4WJ79DVnS2wJPqNCr2\"]}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b506040516200569f3803806200569f83398181016040528101906100349190610124565b80604051610041906100a1565b61004b91906101b0565b604051809103906000f080158015610067573d6000803e3d6000fd5b5073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506101cb565b6141d580620014ca83390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100df826100b4565b9050919050565b60006100f1826100d4565b9050919050565b610101816100e6565b811461010c57600080fd5b50565b60008151905061011e816100f8565b92915050565b60006020828403121561013a576101396100af565b5b60006101488482850161010f565b91505092915050565b6000819050919050565b600061017661017161016c846100b4565b610151565b6100b4565b9050919050565b60006101888261015b565b9050919050565b600061019a8261017d565b9050919050565b6101aa8161018f565b82525050565b60006020820190506101c560008301846101a1565b92915050565b6080516112d6620001f46000396000818160db01528181610145015261023601526112d66000f3fe60806040523480156200001157600080fd5b5060043610620000465760003560e01c806311464fbe146200004b5780635fbfb9cf146200006d5780638cb84e1814620000a3575b600080fd5b62000055620000d9565b604051620000649190620003e1565b60405180910390f35b6200008b600480360381019062000085919062000483565b620000fd565b6040516200009a9190620003e1565b60405180910390f35b620000c16004803603810190620000bb919062000483565b62000204565b604051620000d09190620004db565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806200010c848462000204565b905060008173ffffffffffffffffffffffffffffffffffffffff163b905060008111156200013f578192505050620001fe565b8360001b7f000000000000000000000000000000000000000000000000000000000000000086604051602401620001779190620004db565b60405160208183030381529060405263c4d66de860e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620001ca9062000348565b620001d79291906200059c565b8190604051809103906000f5905080158015620001f8573d6000803e3d6000fd5b50925050505b92915050565b6000620002fe8260001b60405180602001620002209062000348565b6020820181038252601f19601f820116604052507f000000000000000000000000000000000000000000000000000000000000000086604051602401620002689190620004db565b60405160208183030381529060405263c4d66de860e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051602001620002c09291906200059c565b604051602081830303815290604052604051602001620002e292919062000612565b6040516020818303038152906040528051906020012062000306565b905092915050565b6000620003158383306200031d565b905092915050565b6000604051836040820152846020820152828152600b810160ff815360558120925050509392505050565b610c66806200063b83390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620003a16200039b620003958462000356565b62000376565b62000356565b9050919050565b6000620003b58262000380565b9050919050565b6000620003c982620003a8565b9050919050565b620003db81620003bc565b82525050565b6000602082019050620003f86000830184620003d0565b92915050565b600080fd5b6000620004108262000356565b9050919050565b620004228162000403565b81146200042e57600080fd5b50565b600081359050620004428162000417565b92915050565b6000819050919050565b6200045d8162000448565b81146200046957600080fd5b50565b6000813590506200047d8162000452565b92915050565b600080604083850312156200049d576200049c620003fe565b5b6000620004ad8582860162000431565b9250506020620004c0858286016200046c565b9150509250929050565b620004d58162000403565b82525050565b6000602082019050620004f26000830184620004ca565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156200053457808201518184015260208101905062000517565b8381111562000544576000848401525b50505050565b6000601f19601f8301169050919050565b60006200056882620004f8565b62000574818562000503565b93506200058681856020860162000514565b62000591816200054a565b840191505092915050565b6000604082019050620005b36000830185620004ca565b8181036020830152620005c781846200055b565b90509392505050565b600081905092915050565b6000620005e882620004f8565b620005f48185620005d0565b93506200060681856020860162000514565b80840191505092915050565b6000620006208285620005db565b91506200062e8284620005db565b9150819050939250505056fe608060405260405162000c6638038062000c6683398181016040528101906200002991906200058b565b6200003d828260006200004560201b60201c565b5050620007e2565b62000056836200008860201b60201c565b600082511180620000645750805b156200008357620000818383620000df60201b620000371760201c565b505b505050565b62000099816200011560201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b60606200010d838360405180606001604052806027815260200162000c3f60279139620001eb60201b60201c565b905092915050565b6200012b816200027d60201b620000641760201c565b6200016d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001649062000678565b60405180910390fd5b80620001a77f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b620002a060201b620000871760201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808573ffffffffffffffffffffffffffffffffffffffff1685604051620002179190620006e7565b600060405180830381855af49150503d806000811462000254576040519150601f19603f3d011682016040523d82523d6000602084013e62000259565b606091505b50915091506200027286838387620002aa60201b60201c565b925050509392505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b606083156200031b576000835114156200031257620002cf856200027d60201b60201c565b62000311576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003089062000750565b60405180910390fd5b5b8290506200032e565b6200032d83836200033660201b60201c565b5b949350505050565b6000825111156200034a5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003809190620007be565b60405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003ca826200039d565b9050919050565b620003dc81620003bd565b8114620003e857600080fd5b50565b600081519050620003fc81620003d1565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000457826200040c565b810181811067ffffffffffffffff821117156200047957620004786200041d565b5b80604052505050565b60006200048e62000389565b90506200049c82826200044c565b919050565b600067ffffffffffffffff821115620004bf57620004be6200041d565b5b620004ca826200040c565b9050602081019050919050565b60005b83811015620004f7578082015181840152602081019050620004da565b8381111562000507576000848401525b50505050565b6000620005246200051e84620004a1565b62000482565b90508281526020810184848401111562000543576200054262000407565b5b62000550848285620004d7565b509392505050565b600082601f83011262000570576200056f62000402565b5b8151620005828482602086016200050d565b91505092915050565b60008060408385031215620005a557620005a462000393565b5b6000620005b585828601620003eb565b925050602083015167ffffffffffffffff811115620005d957620005d862000398565b5b620005e78582860162000558565b9150509250929050565b600082825260208201905092915050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b600062000660602d83620005f1565b91506200066d8262000602565b604082019050919050565b60006020820190508181036000830152620006938162000651565b9050919050565b600081519050919050565b600081905092915050565b6000620006bd826200069a565b620006c98185620006a5565b9350620006db818560208601620004d7565b80840191505092915050565b6000620006f58284620006b0565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b600062000738601d83620005f1565b9150620007458262000700565b602082019050919050565b600060208201905081810360008301526200076b8162000729565b9050919050565b600081519050919050565b60006200078a8262000772565b620007968185620005f1565b9350620007a8818560208601620004d7565b620007b3816200040c565b840191505092915050565b60006020820190508181036000830152620007da81846200077d565b905092915050565b61044d80620007f26000396000f3fe6080604052366100135761001161001d565b005b61001b61001d565b005b610025610091565b610035610030610093565b6100a2565b565b606061005c83836040518060600160405280602781526020016103f1602791396100c8565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b565b600061009d61014e565b905090565b3660008037600080366000845af43d6000803e80600081146100c3573d6000f35b3d6000fd5b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516100f291906102e5565b600060405180830381855af49150503d806000811461012d576040519150601f19603f3d011682016040523d82523d6000602084013e610132565b606091505b5091509150610143868383876101a5565b925050509392505050565b600061017c7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610087565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060831561020857600083511415610200576101c085610064565b6101ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f690610359565b60405180910390fd5b5b829050610213565b610212838361021b565b5b949350505050565b60008251111561022e5781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026291906103ce565b60405180910390fd5b600081519050919050565b600081905092915050565b60005b8381101561029f578082015181840152602081019050610284565b838111156102ae576000848401525b50505050565b60006102bf8261026b565b6102c98185610276565b93506102d9818560208601610281565b80840191505092915050565b60006102f182846102b4565b915081905092915050565b600082825260208201905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000610343601d836102fc565b915061034e8261030d565b602082019050919050565b6000602082019050818103600083015261037281610336565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b60006103a082610379565b6103aa81856102fc565b93506103ba818560208601610281565b6103c381610384565b840191505092915050565b600060208201905081810360008301526103e88184610395565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212207a0f2b982edb81580f7eefb80831cf0a160c4223f4f653882046cddd5d2fd1af64736f6c634300080c0033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b30e52d6296f6fd0b216a813a80b1b1e3e41e5f22e59262644e4ac75194c0e0364736f6c634300080c003360c06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156200004457600080fd5b50604051620041d5380380620041d583398181016040528101906200006a9190620001f9565b8073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050620000ae620000b560201b60201c565b506200030f565b600060019054906101000a900460ff161562000108576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000ff90620002b2565b60405180910390fd5b60ff801660008054906101000a900460ff1660ff1614620001795760ff6000806101000a81548160ff021916908360ff1602179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860ff604051620001709190620002f2565b60405180910390a15b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001ad8262000180565b9050919050565b6000620001c182620001a0565b9050919050565b620001d381620001b4565b8114620001df57600080fd5b50565b600081519050620001f381620001c8565b92915050565b6000602082840312156200021257620002116200017b565b5b60006200022284828501620001e2565b91505092915050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320696e69746960008201527f616c697a696e6700000000000000000000000000000000000000000000000000602082015250565b60006200029a6027836200022b565b9150620002a7826200023c565b604082019050919050565b60006020820190508181036000830152620002cd816200028b565b9050919050565b600060ff82169050919050565b620002ec81620002d4565b82525050565b6000602082019050620003096000830184620002e1565b92915050565b60805160a051613e7d620003586000396000818161114d0152611c5d015260008181610b5101528181610be001528181610e2201528181610eb10152610f810152613e7d6000f3fe6080604052600436106101845760003560e01c806352d1902d116100d1578063b61d27f61161008a578063c4d66de811610064578063c4d66de8146105a6578063d087d288146105cf578063edb88ae9146105fa578063f23a6e61146106235761018b565b8063b61d27f614610515578063bc197c811461053e578063c399ec881461057b5761018b565b806352d1902d146103f157806355de1faf1461041c5780638da5cb5b14610445578063a82252d714610470578063a9db92ec146104ad578063b0d691fe146104ea5761018b565b80633659cfe61161013e5780634a58db19116101185780634a58db19146103655780634d44560d1461036f5780634f1ef2861461039857806351e0e26b146103b45761018b565b80633659cfe6146102c25780633a871cdd146102eb5780633cf20025146103285761018b565b806223de291461019057806301ffc9a7146101b957806302c3bd4c146101f6578063111e8cf614610233578063150b7a021461025c57806318dfb3c7146102995761018b565b3661018b57005b600080fd5b34801561019c57600080fd5b506101b760048036038101906101b2919061238f565b610660565b005b3480156101c557600080fd5b506101e060048036038101906101db91906124b6565b61066a565b6040516101ed91906124fe565b60405180910390f35b34801561020257600080fd5b5061021d60048036038101906102189190612519565b6107a4565b60405161022a91906124fe565b60405180910390f35b34801561023f57600080fd5b5061025a600480360381019061025591906126fa565b610950565b005b34801561026857600080fd5b50610283600480360381019061027e9190612769565b6109d0565b6040516102909190612800565b60405180910390f35b3480156102a557600080fd5b506102c060048036038101906102bb91906128c7565b6109e5565b005b3480156102ce57600080fd5b506102e960048036038101906102e49190612948565b610b4f565b005b3480156102f757600080fd5b50610312600480360381019061030d91906129d0565b610cd8565b60405161031f9190612a4e565b60405180910390f35b34801561033457600080fd5b5061034f600480360381019061034a9190612948565b610d0b565b60405161035c91906124fe565b60405180910390f35b61036d610d2b565b005b34801561037b57600080fd5b5061039660048036038101906103919190612aa7565b610da0565b005b6103b260048036038101906103ad9190612b88565b610e20565b005b3480156103c057600080fd5b506103db60048036038101906103d69190612948565b610f5d565b6040516103e891906124fe565b60405180910390f35b3480156103fd57600080fd5b50610406610f7d565b6040516104139190612bf3565b60405180910390f35b34801561042857600080fd5b50610443600480360381019061043e9190612c0e565b611036565b005b34801561045157600080fd5b5061045a611099565b6040516104679190612c5d565b60405180910390f35b34801561047c57600080fd5b5061049760048036038101906104929190612c78565b6110bf565b6040516104a49190612d49565b60405180910390f35b3480156104b957600080fd5b506104d460048036038101906104cf9190612d6b565b611104565b6040516104e191906124fe565b60405180910390f35b3480156104f657600080fd5b506104ff611149565b60405161050c9190612e26565b60405180910390f35b34801561052157600080fd5b5061053c60048036038101906105379190612519565b611171565b005b34801561054a57600080fd5b5061056560048036038101906105609190612e97565b611219565b6040516105729190612800565b60405180910390f35b34801561058757600080fd5b50610590611231565b60405161059d9190612a4e565b60405180910390f35b3480156105b257600080fd5b506105cd60048036038101906105c89190612948565b6112b9565b005b3480156105db57600080fd5b506105e46113f9565b6040516105f19190612a4e565b60405180910390f35b34801561060657600080fd5b50610621600480360381019061061c9190612c0e565b611484565b005b34801561062f57600080fd5b5061064a60048036038101906106459190612f73565b6114e7565b6040516106579190612800565b60405180910390f35b5050505050505050565b60007f150b7a02000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061073557507f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061079d57507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16806108475750600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b80156109055750600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206108da84848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506110bf565b6040516108e79190613049565b908152602001604051809103902060009054906101000a900460ff16155b610944576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093b906130ac565b60405180910390fd5b60019050949350505050565b6109586114fd565b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020836040516109a69190613049565b908152602001604051809103902060006101000a81548160ff021916908315150217905550505050565b600063150b7a0260e01b905095945050505050565b6109ed6115c5565b818190508484905014610a35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2c90613118565b60405180910390fd5b60005b84849050811015610b4857610a9a858583818110610a5957610a58613138565b5b9050602002016020810190610a6e9190612948565b6000858585818110610a8357610a82613138565b5b9050602002810190610a959190613176565b6107a4565b50610b35858583818110610ab157610ab0613138565b5b9050602002016020810190610ac69190612948565b6000858585818110610adb57610ada613138565b5b9050602002810190610aed9190613176565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611694565b8080610b4090613208565b915050610a38565b5050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161415610bde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd5906132c3565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610c1d611718565b73ffffffffffffffffffffffffffffffffffffffff1614610c73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6a90613355565b60405180910390fd5b610c7c8161176f565b610cd581600067ffffffffffffffff811115610c9b57610c9a6125a3565b5b6040519080825280601f01601f191660200182016040528015610ccd5781602001600182028036833780820191505090505b50600061177a565b50565b6000610ce26118e8565b610cec848461195f565b9050610cfb8460200135611a3d565b610d0482611a40565b9392505050565b60016020528060005260406000206000915054906101000a900460ff1681565b610d33611149565b73ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b8152600401610d6c9190612c5d565b6000604051808303818588803b158015610d8557600080fd5b505af1158015610d99573d6000803e3d6000fd5b5050505050565b610da86114fd565b610db0611149565b73ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b8152600401610dea929190613384565b600060405180830381600087803b158015610e0457600080fd5b505af1158015610e18573d6000803e3d6000fd5b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161415610eaf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea6906132c3565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610eee611718565b73ffffffffffffffffffffffffffffffffffffffff1614610f44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3b90613355565b60405180910390fd5b610f4d8261176f565b610f598282600161177a565b5050565b60026020528060005260406000206000915054906101000a900460ff1681565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161461100d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110049061341f565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b61103e6114fd565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606000828060200190518101906110d791906134c4565b50905060006110e582611adc565b8060200190518101906110f89190613590565b90508092505050919050565b6003602052816000526040600020818051602081018201805184825260208301602085012081835280955050505050506000915091509054906101000a900460ff1681565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6111796115c5565b611185848484846107a4565b6111c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111bb906130ac565b60405180910390fd5b611213848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611694565b50505050565b600063bc197c8160e01b905098975050505050505050565b600061123b611149565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016112739190612c5d565b602060405180830381865afa158015611290573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b491906135ee565b905090565b60008060019054906101000a900460ff161590508080156112ea5750600160008054906101000a900460ff1660ff16105b8061131757506112f930611bbe565b1580156113165750600160008054906101000a900460ff1660ff16145b5b611356576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134d9061368d565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015611393576001600060016101000a81548160ff0219169083151502179055505b61139c82611be1565b80156113f55760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516113ec91906136f5565b60405180910390a15b5050565b6000611403611149565b73ffffffffffffffffffffffffffffffffffffffff166335567e1a3060006040518363ffffffff1660e01b815260040161143e92919061376f565b602060405180830381865afa15801561145b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061147f91906135ee565b905090565b61148c6114fd565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600063f23a6e6160e01b90509695505050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061158457503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6115c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ba906137e4565b60405180910390fd5b565b6115cd611149565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806116535750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b611692576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161168990613850565b60405180910390fd5b565b6000808473ffffffffffffffffffffffffffffffffffffffff1684846040516116bd91906138b7565b60006040518083038185875af1925050503d80600081146116fa576040519150601f19603f3d011682016040523d82523d6000602084013e6116ff565b606091505b50915091508161171157805160208201fd5b5050505050565b60006117467f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b611cc1565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6117776114fd565b50565b6117a67f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914360001b611ccb565b60000160009054906101000a900460ff16156117ca576117c583611cd5565b6118e3565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561183257506040513d601f19601f8201168201806040525081019061182f91906138e3565b60015b611871576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161186890613982565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b81146118d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118cd90613a14565b60405180910390fd5b506118e2838383611d8e565b5b505050565b6118f0611149565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461195d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161195490613a80565b60405180910390fd5b565b60008061196b83611dba565b90506119d3848061014001906119819190613176565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505082611df090919063ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611a31576001915050611a37565b60009150505b92915050565b50565b60008114611ad95760003373ffffffffffffffffffffffffffffffffffffffff16827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90604051611a9090613ac6565b600060405180830381858888f193505050503d8060008114611ace576040519150601f19603f3d011682016040523d82523d6000602084013e611ad3565b606091505b50509050505b50565b60606000602067ffffffffffffffff811115611afb57611afa6125a3565b5b6040519080825280601f01601f191660200182016040528015611b2d5781602001600182028036833780820191505090505b50905060005b6004811015611bb4576000600882611b4b9190613adb565b63ff00000063ffffffff16901c60e01b905080838381518110611b7157611b70613138565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350508080611bac90613208565b915050611b33565b5080915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f9fdb50f0f5a9669bd96a50bfbddcd23cede9345229d3523da3e75bc76be1ac9460405160405180910390a350565b6000819050919050565b6000819050919050565b611cde81611bbe565b611d1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d1490613ba7565b60405180910390fd5b80611d4a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b611cc1565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611d9783611e17565b600082511180611da45750805b15611db557611db38383611e66565b505b505050565b60007f19457468657265756d205369676e6564204d6573736167653a0a33320000000060005281601c52603c6000209050919050565b6000806000611dff8585611e93565b91509150611e0c81611ee5565b819250505092915050565b611e2081611cd5565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b6060611e8b8383604051806060016040528060278152602001613e2160279139612053565b905092915050565b600080604183511415611ed55760008060006020860151925060408601519150606086015160001a9050611ec9878285856120d9565b94509450505050611ede565b60006002915091505b9250929050565b60006004811115611ef957611ef8613bc7565b5b816004811115611f0c57611f0b613bc7565b5b1415611f1757612050565b60016004811115611f2b57611f2a613bc7565b5b816004811115611f3e57611f3d613bc7565b5b1415611f7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f7690613c42565b60405180910390fd5b60026004811115611f9357611f92613bc7565b5b816004811115611fa657611fa5613bc7565b5b1415611fe7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fde90613cae565b60405180910390fd5b60036004811115611ffb57611ffa613bc7565b5b81600481111561200e5761200d613bc7565b5b141561204f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161204690613d40565b60405180910390fd5b5b50565b60606000808573ffffffffffffffffffffffffffffffffffffffff168560405161207d91906138b7565b600060405180830381855af49150503d80600081146120b8576040519150601f19603f3d011682016040523d82523d6000602084013e6120bd565b606091505b50915091506120ce868383876121bc565b925050509392505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156121145760006003915091506121b3565b6000600187878787604051600081526020016040526040516121399493929190613d6f565b6020604051602081039080840390855afa15801561215b573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156121aa576000600192509250506121b3565b80600092509250505b94509492505050565b6060831561221f57600083511415612217576121d785611bbe565b612216576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161220d90613e00565b60405180910390fd5b5b82905061222a565b6122298383612232565b5b949350505050565b6000825111156122455781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122799190612d49565b60405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006122c182612296565b9050919050565b6122d1816122b6565b81146122dc57600080fd5b50565b6000813590506122ee816122c8565b92915050565b6000819050919050565b612307816122f4565b811461231257600080fd5b50565b600081359050612324816122fe565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261234f5761234e61232a565b5b8235905067ffffffffffffffff81111561236c5761236b61232f565b5b60208301915083600182028301111561238857612387612334565b5b9250929050565b60008060008060008060008060c0898b0312156123af576123ae61228c565b5b60006123bd8b828c016122df565b98505060206123ce8b828c016122df565b97505060406123df8b828c016122df565b96505060606123f08b828c01612315565b955050608089013567ffffffffffffffff81111561241157612410612291565b5b61241d8b828c01612339565b945094505060a089013567ffffffffffffffff8111156124405761243f612291565b5b61244c8b828c01612339565b92509250509295985092959890939650565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6124938161245e565b811461249e57600080fd5b50565b6000813590506124b08161248a565b92915050565b6000602082840312156124cc576124cb61228c565b5b60006124da848285016124a1565b91505092915050565b60008115159050919050565b6124f8816124e3565b82525050565b600060208201905061251360008301846124ef565b92915050565b600080600080606085870312156125335761253261228c565b5b6000612541878288016122df565b945050602061255287828801612315565b935050604085013567ffffffffffffffff81111561257357612572612291565b5b61257f87828801612339565b925092505092959194509250565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6125db82612592565b810181811067ffffffffffffffff821117156125fa576125f96125a3565b5b80604052505050565b600061260d612282565b905061261982826125d2565b919050565b600067ffffffffffffffff821115612639576126386125a3565b5b61264282612592565b9050602081019050919050565b82818337600083830152505050565b600061267161266c8461261e565b612603565b90508281526020810184848401111561268d5761268c61258d565b5b61269884828561264f565b509392505050565b600082601f8301126126b5576126b461232a565b5b81356126c584826020860161265e565b91505092915050565b6126d7816124e3565b81146126e257600080fd5b50565b6000813590506126f4816126ce565b92915050565b6000806000606084860312156127135761271261228c565b5b6000612721868287016122df565b935050602084013567ffffffffffffffff81111561274257612741612291565b5b61274e868287016126a0565b925050604061275f868287016126e5565b9150509250925092565b6000806000806000608086880312156127855761278461228c565b5b6000612793888289016122df565b95505060206127a4888289016122df565b94505060406127b588828901612315565b935050606086013567ffffffffffffffff8111156127d6576127d5612291565b5b6127e288828901612339565b92509250509295509295909350565b6127fa8161245e565b82525050565b600060208201905061281560008301846127f1565b92915050565b60008083601f8401126128315761283061232a565b5b8235905067ffffffffffffffff81111561284e5761284d61232f565b5b60208301915083602082028301111561286a57612869612334565b5b9250929050565b60008083601f8401126128875761288661232a565b5b8235905067ffffffffffffffff8111156128a4576128a361232f565b5b6020830191508360208202830111156128c0576128bf612334565b5b9250929050565b600080600080604085870312156128e1576128e061228c565b5b600085013567ffffffffffffffff8111156128ff576128fe612291565b5b61290b8782880161281b565b9450945050602085013567ffffffffffffffff81111561292e5761292d612291565b5b61293a87828801612871565b925092505092959194509250565b60006020828403121561295e5761295d61228c565b5b600061296c848285016122df565b91505092915050565b600080fd5b6000610160828403121561299157612990612975565b5b81905092915050565b6000819050919050565b6129ad8161299a565b81146129b857600080fd5b50565b6000813590506129ca816129a4565b92915050565b6000806000606084860312156129e9576129e861228c565b5b600084013567ffffffffffffffff811115612a0757612a06612291565b5b612a138682870161297a565b9350506020612a24868287016129bb565b9250506040612a3586828701612315565b9150509250925092565b612a48816122f4565b82525050565b6000602082019050612a636000830184612a3f565b92915050565b6000612a7482612296565b9050919050565b612a8481612a69565b8114612a8f57600080fd5b50565b600081359050612aa181612a7b565b92915050565b60008060408385031215612abe57612abd61228c565b5b6000612acc85828601612a92565b9250506020612add85828601612315565b9150509250929050565b600067ffffffffffffffff821115612b0257612b016125a3565b5b612b0b82612592565b9050602081019050919050565b6000612b2b612b2684612ae7565b612603565b905082815260208101848484011115612b4757612b4661258d565b5b612b5284828561264f565b509392505050565b600082601f830112612b6f57612b6e61232a565b5b8135612b7f848260208601612b18565b91505092915050565b60008060408385031215612b9f57612b9e61228c565b5b6000612bad858286016122df565b925050602083013567ffffffffffffffff811115612bce57612bcd612291565b5b612bda85828601612b5a565b9150509250929050565b612bed8161299a565b82525050565b6000602082019050612c086000830184612be4565b92915050565b60008060408385031215612c2557612c2461228c565b5b6000612c33858286016122df565b9250506020612c44858286016126e5565b9150509250929050565b612c57816122b6565b82525050565b6000602082019050612c726000830184612c4e565b92915050565b600060208284031215612c8e57612c8d61228c565b5b600082013567ffffffffffffffff811115612cac57612cab612291565b5b612cb884828501612b5a565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612cfb578082015181840152602081019050612ce0565b83811115612d0a576000848401525b50505050565b6000612d1b82612cc1565b612d258185612ccc565b9350612d35818560208601612cdd565b612d3e81612592565b840191505092915050565b60006020820190508181036000830152612d638184612d10565b905092915050565b60008060408385031215612d8257612d8161228c565b5b6000612d90858286016122df565b925050602083013567ffffffffffffffff811115612db157612db0612291565b5b612dbd858286016126a0565b9150509250929050565b6000819050919050565b6000612dec612de7612de284612296565b612dc7565b612296565b9050919050565b6000612dfe82612dd1565b9050919050565b6000612e1082612df3565b9050919050565b612e2081612e05565b82525050565b6000602082019050612e3b6000830184612e17565b92915050565b60008083601f840112612e5757612e5661232a565b5b8235905067ffffffffffffffff811115612e7457612e7361232f565b5b602083019150836020820283011115612e9057612e8f612334565b5b9250929050565b60008060008060008060008060a0898b031215612eb757612eb661228c565b5b6000612ec58b828c016122df565b9850506020612ed68b828c016122df565b975050604089013567ffffffffffffffff811115612ef757612ef6612291565b5b612f038b828c01612e41565b9650965050606089013567ffffffffffffffff811115612f2657612f25612291565b5b612f328b828c01612e41565b9450945050608089013567ffffffffffffffff811115612f5557612f54612291565b5b612f618b828c01612339565b92509250509295985092959890939650565b60008060008060008060a08789031215612f9057612f8f61228c565b5b6000612f9e89828a016122df565b9650506020612faf89828a016122df565b9550506040612fc089828a01612315565b9450506060612fd189828a01612315565b935050608087013567ffffffffffffffff811115612ff257612ff1612291565b5b612ffe89828a01612339565b92509250509295509295509295565b600081905092915050565b600061302382612cc1565b61302d818561300d565b935061303d818560208601612cdd565b80840191505092915050565b60006130558284613018565b915081905092915050565b7f6f7065726174696f6e206e6f7420616c6c6f7765640000000000000000000000600082015250565b6000613096601583612ccc565b91506130a182613060565b602082019050919050565b600060208201905081810360008301526130c581613089565b9050919050565b7f77726f6e67206172726179206c656e6774687300000000000000000000000000600082015250565b6000613102601383612ccc565b915061310d826130cc565b602082019050919050565b60006020820190508181036000830152613131816130f5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261319357613192613167565b5b80840192508235915067ffffffffffffffff8211156131b5576131b461316c565b5b6020830192506001820236038313156131d1576131d0613171565b5b509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613213826122f4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613246576132456131d9565b5b600182019050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f64656c656761746563616c6c0000000000000000000000000000000000000000602082015250565b60006132ad602c83612ccc565b91506132b882613251565b604082019050919050565b600060208201905081810360008301526132dc816132a0565b9050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f6163746976652070726f78790000000000000000000000000000000000000000602082015250565b600061333f602c83612ccc565b915061334a826132e3565b604082019050919050565b6000602082019050818103600083015261336e81613332565b9050919050565b61337e81612a69565b82525050565b60006040820190506133996000830185613375565b6133a66020830184612a3f565b9392505050565b7f555550535570677261646561626c653a206d757374206e6f742062652063616c60008201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000602082015250565b6000613409603883612ccc565b9150613414826133ad565b604082019050919050565b60006020820190508181036000830152613438816133fc565b9050919050565b60008151905061344e8161248a565b92915050565b600061346761346284612ae7565b612603565b9050828152602081018484840111156134835761348261258d565b5b61348e848285612cdd565b509392505050565b600082601f8301126134ab576134aa61232a565b5b81516134bb848260208601613454565b91505092915050565b600080604083850312156134db576134da61228c565b5b60006134e98582860161343f565b925050602083015167ffffffffffffffff81111561350a57613509612291565b5b61351685828601613496565b9150509250929050565b600061353361352e8461261e565b612603565b90508281526020810184848401111561354f5761354e61258d565b5b61355a848285612cdd565b509392505050565b600082601f8301126135775761357661232a565b5b8151613587848260208601613520565b91505092915050565b6000602082840312156135a6576135a561228c565b5b600082015167ffffffffffffffff8111156135c4576135c3612291565b5b6135d084828501613562565b91505092915050565b6000815190506135e8816122fe565b92915050565b6000602082840312156136045761360361228c565b5b6000613612848285016135d9565b91505092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000613677602e83612ccc565b91506136828261361b565b604082019050919050565b600060208201905081810360008301526136a68161366a565b9050919050565b6000819050919050565b600060ff82169050919050565b60006136df6136da6136d5846136ad565b612dc7565b6136b7565b9050919050565b6136ef816136c4565b82525050565b600060208201905061370a60008301846136e6565b92915050565b6000819050919050565b600077ffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b600061375961375461374f84613710565b612dc7565b61371a565b9050919050565b6137698161373e565b82525050565b60006040820190506137846000830185612c4e565b6137916020830184613760565b9392505050565b7f6f6e6c79206f776e657200000000000000000000000000000000000000000000600082015250565b60006137ce600a83612ccc565b91506137d982613798565b602082019050919050565b600060208201905081810360008301526137fd816137c1565b9050919050565b7f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e74600082015250565b600061383a602083612ccc565b915061384582613804565b602082019050919050565b600060208201905081810360008301526138698161382d565b9050919050565b600081519050919050565b600081905092915050565b600061389182613870565b61389b818561387b565b93506138ab818560208601612cdd565b80840191505092915050565b60006138c38284613886565b915081905092915050565b6000815190506138dd816129a4565b92915050565b6000602082840312156138f9576138f861228c565b5b6000613907848285016138ce565b91505092915050565b7f45524331393637557067726164653a206e657720696d706c656d656e7461746960008201527f6f6e206973206e6f742055555053000000000000000000000000000000000000602082015250565b600061396c602e83612ccc565b915061397782613910565b604082019050919050565b6000602082019050818103600083015261399b8161395f565b9050919050565b7f45524331393637557067726164653a20756e737570706f727465642070726f7860008201527f6961626c65555549440000000000000000000000000000000000000000000000602082015250565b60006139fe602983612ccc565b9150613a09826139a2565b604082019050919050565b60006020820190508181036000830152613a2d816139f1565b9050919050565b7f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000600082015250565b6000613a6a601c83612ccc565b9150613a7582613a34565b602082019050919050565b60006020820190508181036000830152613a9981613a5d565b9050919050565b50565b6000613ab060008361387b565b9150613abb82613aa0565b600082019050919050565b6000613ad182613aa3565b9150819050919050565b6000613ae6826122f4565b9150613af1836122f4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613b2a57613b296131d9565b5b828202905092915050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b6000613b91602d83612ccc565b9150613b9c82613b35565b604082019050919050565b60006020820190508181036000830152613bc081613b84565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b6000613c2c601883612ccc565b9150613c3782613bf6565b602082019050919050565b60006020820190508181036000830152613c5b81613c1f565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000613c98601f83612ccc565b9150613ca382613c62565b602082019050919050565b60006020820190508181036000830152613cc781613c8b565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b6000613d2a602283612ccc565b9150613d3582613cce565b604082019050919050565b60006020820190508181036000830152613d5981613d1d565b9050919050565b613d69816136b7565b82525050565b6000608082019050613d846000830187612be4565b613d916020830186613d60565b613d9e6040830185612be4565b613dab6060830184612be4565b95945050505050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000613dea601d83612ccc565b9150613df582613db4565b602082019050919050565b60006020820190508181036000830152613e1981613ddd565b905091905056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122076647bbc26b9868d2d005289136949a65ab15369fc5ac95609858b8f6447f0e764736f6c634300080c0033",
  "deployedBytecode": "",
  "immutableReferences": {
    "2905": [
      {
        "length": 32,
        "start": 219
      },
      {
        "length": 32,
        "start": 325
      },
      {
        "length": 32,
        "start": 566
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2384:31",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:31",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:31",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:31"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:31",
                "type": ""
              }
            ],
            "src": "7:75:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:31",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:31",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:31"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:31",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:31",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:31"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:31",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:31"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:31"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:31",
                "type": ""
              }
            ],
            "src": "334:126:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:31"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:31"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:31",
                "type": ""
              }
            ],
            "src": "466:96:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "633:51:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "643:35:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "654:17:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "654:24:31"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "643:7:31"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_IEntryPoint_$4317",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "615:5:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "625:7:31",
                "type": ""
              }
            ],
            "src": "568:116:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "753:99:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "830:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "839:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "842:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "832:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "832:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "832:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "776:5:31"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "821:5:31"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_IEntryPoint_$4317",
                              "nodeType": "YulIdentifier",
                              "src": "783:37:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "783:44:31"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "773:2:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:55:31"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "766:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "766:63:31"
                  },
                  "nodeType": "YulIf",
                  "src": "763:83:31"
                }
              ]
            },
            "name": "validator_revert_t_contract$_IEntryPoint_$4317",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "746:5:31",
                "type": ""
              }
            ],
            "src": "690:162:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "941:100:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "951:22:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "966:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "960:5:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "960:13:31"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "951:5:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1029:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_IEntryPoint_$4317",
                      "nodeType": "YulIdentifier",
                      "src": "982:46:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "982:53:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "982:53:31"
                }
              ]
            },
            "name": "abi_decode_t_contract$_IEntryPoint_$4317_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "919:6:31",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "927:3:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "935:5:31",
                "type": ""
              }
            ],
            "src": "858:183:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1144:294:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1190:83:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1192:77:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1192:79:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1192:79:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1165:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1174:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1161:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1161:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1186:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1157:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1157:32:31"
                  },
                  "nodeType": "YulIf",
                  "src": "1154:119:31"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1283:148:31",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1298:15:31",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1312:1:31",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1302:6:31",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1327:94:31",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1393:9:31"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1404:6:31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1389:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1389:22:31"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1413:7:31"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IEntryPoint_$4317_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1337:51:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1337:84:31"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1327:6:31"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IEntryPoint_$4317_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1114:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1125:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1137:6:31",
                "type": ""
              }
            ],
            "src": "1047:391:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1476:28:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1486:12:31",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1493:5:31"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "1486:3:31"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1462:5:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "1472:3:31",
                "type": ""
              }
            ],
            "src": "1444:60:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1570:82:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1580:66:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1638:5:31"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "1620:17:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1620:24:31"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "1611:8:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1611:34:31"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1593:17:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1593:53:31"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1580:9:31"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1550:5:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1560:9:31",
                "type": ""
              }
            ],
            "src": "1510:142:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1718:66:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1728:50:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1772:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1741:30:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1741:37:31"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1728:9:31"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1698:5:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1708:9:31",
                "type": ""
              }
            ],
            "src": "1658:126:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1870:66:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1880:50:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1924:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1893:30:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1893:37:31"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1880:9:31"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IEntryPoint_$4317_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1850:5:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1860:9:31",
                "type": ""
              }
            ],
            "src": "1790:146:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2027:86:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2044:3:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2100:5:31"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IEntryPoint_$4317_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2049:50:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2049:57:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2037:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2037:70:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2037:70:31"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IEntryPoint_$4317_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2015:5:31",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2022:3:31",
                "type": ""
              }
            ],
            "src": "1942:171:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2237:144:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2247:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2259:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2270:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2255:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2255:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2247:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2347:6:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2360:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2371:1:31",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2356:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2356:17:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IEntryPoint_$4317_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2283:63:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2283:91:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2283:91:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IEntryPoint_$4317__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2209:9:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2221:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2232:4:31",
                "type": ""
              }
            ],
            "src": "2119:262:31"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IEntryPoint_$4317(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IEntryPoint_$4317(value) {\n        if iszero(eq(value, cleanup_t_contract$_IEntryPoint_$4317(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IEntryPoint_$4317_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IEntryPoint_$4317(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IEntryPoint_$4317_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IEntryPoint_$4317_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IEntryPoint_$4317_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IEntryPoint_$4317_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IEntryPoint_$4317_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IEntryPoint_$4317__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IEntryPoint_$4317_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
      "id": 31,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5505:31",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:31",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:31"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:31"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:31",
                "type": ""
              }
            ],
            "src": "7:126:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "171:28:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "181:12:31",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "188:5:31"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "181:3:31"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "157:5:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "167:3:31",
                "type": ""
              }
            ],
            "src": "139:60:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "265:82:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "275:66:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "333:5:31"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "315:17:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "315:24:31"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "306:8:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "306:34:31"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "288:17:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "288:53:31"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "275:9:31"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "245:5:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "255:9:31",
                "type": ""
              }
            ],
            "src": "205:142:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "421:66:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "431:50:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "475:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "444:30:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "444:37:31"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "431:9:31"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "401:5:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "411:9:31",
                "type": ""
              }
            ],
            "src": "353:134:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "586:74:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "596:58:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "648:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "609:38:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "609:45:31"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "596:9:31"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_DiscoveryAccount_$3700_to_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "566:5:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "576:9:31",
                "type": ""
              }
            ],
            "src": "493:167:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "764:99:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "781:3:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "850:5:31"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_DiscoveryAccount_$3700_to_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "786:63:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "786:70:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "774:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "774:83:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "774:83:31"
                }
              ]
            },
            "name": "abi_encode_t_contract$_DiscoveryAccount_$3700_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "752:5:31",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "759:3:31",
                "type": ""
              }
            ],
            "src": "666:197:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1000:157:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1010:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1022:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1033:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1018:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1018:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1010:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1123:6:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1136:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1147:1:31",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1132:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1132:17:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_DiscoveryAccount_$3700_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1046:76:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1046:104:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1046:104:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_DiscoveryAccount_$3700__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "972:9:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "984:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "995:4:31",
                "type": ""
              }
            ],
            "src": "869:288:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1203:35:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1213:19:31",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1229:2:31",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1223:5:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1223:9:31"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1213:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1196:6:31",
                "type": ""
              }
            ],
            "src": "1163:75:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1333:28:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1350:1:31",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1353:1:31",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1343:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1343:12:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1343:12:31"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "1244:117:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1456:28:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1473:1:31",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1476:1:31",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1466:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1466:12:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1466:12:31"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "1367:117:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1535:51:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1545:35:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1574:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1556:17:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1556:24:31"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1545:7:31"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1517:5:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1527:7:31",
                "type": ""
              }
            ],
            "src": "1490:96:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1635:79:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1692:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1701:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1704:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1694:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1694:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1694:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1658:5:31"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1683:5:31"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1665:17:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1665:24:31"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1655:2:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1655:35:31"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1648:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1648:43:31"
                  },
                  "nodeType": "YulIf",
                  "src": "1645:63:31"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1628:5:31",
                "type": ""
              }
            ],
            "src": "1592:122:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1772:87:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1782:29:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1804:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1791:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1791:20:31"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1782:5:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1847:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1820:26:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1820:33:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1820:33:31"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1750:6:31",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1758:3:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1766:5:31",
                "type": ""
              }
            ],
            "src": "1720:139:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1910:32:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1920:16:31",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1931:5:31"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1920:7:31"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1892:5:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1902:7:31",
                "type": ""
              }
            ],
            "src": "1865:77:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1991:79:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2048:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2057:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2060:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2050:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2050:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2050:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2014:5:31"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2039:5:31"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2021:17:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2021:24:31"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2011:2:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2011:35:31"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2004:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2004:43:31"
                  },
                  "nodeType": "YulIf",
                  "src": "2001:63:31"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1984:5:31",
                "type": ""
              }
            ],
            "src": "1948:122:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2128:87:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2138:29:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2160:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2147:12:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2147:20:31"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2138:5:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2203:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2176:26:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2176:33:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2176:33:31"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2106:6:31",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2114:3:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2122:5:31",
                "type": ""
              }
            ],
            "src": "2076:139:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2304:391:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2350:83:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2352:77:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2352:79:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2352:79:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2325:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2334:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2321:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2321:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2346:2:31",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2317:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2317:32:31"
                  },
                  "nodeType": "YulIf",
                  "src": "2314:119:31"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2443:117:31",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2458:15:31",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2472:1:31",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2462:6:31",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2487:63:31",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2522:9:31"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2533:6:31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2518:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2518:22:31"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2542:7:31"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2497:20:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2497:53:31"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2487:6:31"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2570:118:31",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2585:16:31",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2599:2:31",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2589:6:31",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2615:63:31",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2650:9:31"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2661:6:31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2646:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2646:22:31"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2670:7:31"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2625:20:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2625:53:31"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2615:6:31"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2266:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2277:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2289:6:31",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2297:6:31",
                "type": ""
              }
            ],
            "src": "2221:474:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2766:53:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2783:3:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2806:5:31"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2788:17:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2788:24:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2776:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2776:37:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2776:37:31"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2754:5:31",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2761:3:31",
                "type": ""
              }
            ],
            "src": "2701:118:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2923:124:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2933:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2945:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2956:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2941:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2941:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2933:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3013:6:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3026:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3037:1:31",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3022:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3022:17:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2969:43:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2969:71:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2969:71:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2895:9:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2907:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2918:4:31",
                "type": ""
              }
            ],
            "src": "2825:222:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3111:40:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3122:22:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3138:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3132:5:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3132:12:31"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "3122:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3094:5:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3104:6:31",
                "type": ""
              }
            ],
            "src": "3053:98:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3252:73:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3269:3:31"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3274:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3262:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3262:19:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3262:19:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3290:29:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3309:3:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3314:4:31",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3305:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3305:14:31"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3290:11:31"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3224:3:31",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3229:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3240:11:31",
                "type": ""
              }
            ],
            "src": "3157:168:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3380:258:31",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3390:10:31",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3399:1:31",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "3394:1:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3459:63:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3484:3:31"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "3489:1:31"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3480:3:31"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3480:11:31"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "3503:3:31"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "3508:1:31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3499:3:31"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3499:11:31"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3493:5:31"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3493:18:31"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3473:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3473:39:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3473:39:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3420:1:31"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3423:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3417:2:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3417:13:31"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3431:19:31",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3433:15:31",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3442:1:31"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3445:2:31",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3438:3:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3438:10:31"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3433:1:31"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3413:3:31",
                    "statements": []
                  },
                  "src": "3409:113:31"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3556:76:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3606:3:31"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "3611:6:31"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3602:3:31"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3602:16:31"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3620:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3595:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3595:27:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3595:27:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3537:1:31"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3540:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3534:2:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3534:13:31"
                  },
                  "nodeType": "YulIf",
                  "src": "3531:101:31"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "3362:3:31",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "3367:3:31",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3372:6:31",
                "type": ""
              }
            ],
            "src": "3331:307:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3692:54:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3702:38:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3720:5:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3727:2:31",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3716:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3716:14:31"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3736:2:31",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "3732:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3732:7:31"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3712:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3712:28:31"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "3702:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3675:5:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "3685:6:31",
                "type": ""
              }
            ],
            "src": "3644:102:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3842:270:31",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3852:52:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3898:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_bytes_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3866:31:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3866:38:31"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3856:6:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3913:77:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3978:3:31"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3983:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3920:57:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3920:70:31"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3913:3:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4025:5:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4032:4:31",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4021:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4021:16:31"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4039:3:31"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4044:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3999:21:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3999:52:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3999:52:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4060:46:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4071:3:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4098:6:31"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "4076:21:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4076:29:31"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4067:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4067:39:31"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4060:3:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3823:5:31",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3830:3:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3838:3:31",
                "type": ""
              }
            ],
            "src": "3752:360:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4262:275:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4272:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4284:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4295:2:31",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4280:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4280:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4272:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4352:6:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4365:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4376:1:31",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4361:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4361:17:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4308:43:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4308:71:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4308:71:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4400:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4411:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4396:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4396:18:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4420:4:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4426:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4416:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4416:20:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4389:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4389:48:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4389:48:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4446:84:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4516:6:31"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4525:4:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4454:61:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4454:76:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4446:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4226:9:31",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4238:6:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4246:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4257:4:31",
                "type": ""
              }
            ],
            "src": "4118:419:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4656:34:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4666:18:31",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4681:3:31"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4666:11:31"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4628:3:31",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4633:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4644:11:31",
                "type": ""
              }
            ],
            "src": "4543:147:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4804:265:31",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4814:52:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4860:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_bytes_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "4828:31:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4828:38:31"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4818:6:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4875:95:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4958:3:31"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4963:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4882:75:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4882:88:31"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4875:3:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5005:5:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5012:4:31",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5001:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5001:16:31"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5019:3:31"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5024:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4979:21:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4979:52:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4979:52:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5040:23:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5051:3:31"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5056:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5047:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5047:16:31"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5040:3:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4785:5:31",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4792:3:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4800:3:31",
                "type": ""
              }
            ],
            "src": "4696:373:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5255:247:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5266:100:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5353:6:31"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5362:3:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5273:79:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5273:93:31"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5266:3:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5376:100:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5463:6:31"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5472:3:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5383:79:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5383:93:31"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5376:3:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5486:10:31",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "5493:3:31"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5486:3:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5226:3:31",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5232:6:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5240:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5251:3:31",
                "type": ""
              }
            ],
            "src": "5075:427:31"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address_payable(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_DiscoveryAccount_$3700_to_t_address_payable(value) -> converted {\n        converted := convert_t_uint160_to_t_address_payable(value)\n    }\n\n    function abi_encode_t_contract$_DiscoveryAccount_$3700_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_DiscoveryAccount_$3700_to_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_contract$_DiscoveryAccount_$3700__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_DiscoveryAccount_$3700_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n}\n",
      "id": 31,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "638:1648:19:-:0;;;742:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;835:11;814:33;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;790:57;;;;;;;;;;742:113;638:1648;;;;;;;;;;:::o;88:117:31:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:116::-;625:7;654:24;672:5;654:24;:::i;:::-;643:35;;568:116;;;:::o;690:162::-;783:44;821:5;783:44;:::i;:::-;776:5;773:55;763:83;;842:1;839;832:12;763:83;690:162;:::o;858:183::-;935:5;966:6;960:13;951:22;;982:53;1029:5;982:53;:::i;:::-;858:183;;;;:::o;1047:391::-;1137:6;1186:2;1174:9;1165:7;1161:23;1157:32;1154:119;;;1192:79;;:::i;:::-;1154:119;1312:1;1337:84;1413:7;1404:6;1393:9;1389:22;1337:84;:::i;:::-;1327:94;;1283:148;1047:391;;;;:::o;1444:60::-;1472:3;1493:5;1486:12;;1444:60;;;:::o;1510:142::-;1560:9;1593:53;1611:34;1620:24;1638:5;1620:24;:::i;:::-;1611:34;:::i;:::-;1593:53;:::i;:::-;1580:66;;1510:142;;;:::o;1658:126::-;1708:9;1741:37;1772:5;1741:37;:::i;:::-;1728:50;;1658:126;;;:::o;1790:146::-;1860:9;1893:37;1924:5;1893:37;:::i;:::-;1880:50;;1790:146;;;:::o;1942:171::-;2049:57;2100:5;2049:57;:::i;:::-;2044:3;2037:70;1942:171;;:::o;2119:262::-;2232:4;2270:2;2259:9;2255:18;2247:26;;2283:91;2371:1;2360:9;2356:17;2347:6;2283:91;:::i;:::-;2119:262;;;;:::o;638:1648:19:-;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "638:1648:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;678:55;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1243:499;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1872:411;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;678:55;;;:::o;1243:499::-;1310:20;1343:12;1358:23;1369:5;1376:4;1358:10;:23::i;:::-;1343:38;;1392:13;1408:4;:16;;;1392:32;;1450:1;1439:8;:12;1435:83;;;1500:4;1468:38;;;;;;1435:83;1591:4;1583:13;;1624:21;1710:5;1665:52;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1559:173;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1528:206;;1332:410;;1243:499;;;;;:::o;1872:411::-;1941:7;1968:307;1999:4;1991:13;;2051:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2142:21;2232:5;2187:52;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2101:157;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2016:257;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2006:268;;;;;;1968:22;:307::i;:::-;1961:314;;1872:411;;;;:::o;1769:165:12:-;1852:7;1878:49;1893:4;1899:12;1921:4;1878:14;:49::i;:::-;1871:56;;1769:165;;;;:::o;2177:1772::-;2278:12;2385:4;2379:11;3604:12;3597:4;3592:3;3588:14;3581:36;3653:4;3646;3641:3;3637:14;3630:28;3683:8;3678:3;3671:21;3776:4;3771:3;3767:14;3887:4;3880:5;3872:20;3930:2;3923:5;3913:20;3905:28;;2354:1589;;2177:1772;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:126:31:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:134::-;411:9;444:37;475:5;444:37;:::i;:::-;431:50;;353:134;;;:::o;493:167::-;576:9;609:45;648:5;609:45;:::i;:::-;596:58;;493:167;;;:::o;666:197::-;786:70;850:5;786:70;:::i;:::-;781:3;774:83;666:197;;:::o;869:288::-;995:4;1033:2;1022:9;1018:18;1010:26;;1046:104;1147:1;1136:9;1132:17;1123:6;1046:104;:::i;:::-;869:288;;;;:::o;1244:117::-;1353:1;1350;1343:12;1490:96;1527:7;1556:24;1574:5;1556:24;:::i;:::-;1545:35;;1490:96;;;:::o;1592:122::-;1665:24;1683:5;1665:24;:::i;:::-;1658:5;1655:35;1645:63;;1704:1;1701;1694:12;1645:63;1592:122;:::o;1720:139::-;1766:5;1804:6;1791:20;1782:29;;1820:33;1847:5;1820:33;:::i;:::-;1720:139;;;;:::o;1865:77::-;1902:7;1931:5;1920:16;;1865:77;;;:::o;1948:122::-;2021:24;2039:5;2021:24;:::i;:::-;2014:5;2011:35;2001:63;;2060:1;2057;2050:12;2001:63;1948:122;:::o;2076:139::-;2122:5;2160:6;2147:20;2138:29;;2176:33;2203:5;2176:33;:::i;:::-;2076:139;;;;:::o;2221:474::-;2289:6;2297;2346:2;2334:9;2325:7;2321:23;2317:32;2314:119;;;2352:79;;:::i;:::-;2314:119;2472:1;2497:53;2542:7;2533:6;2522:9;2518:22;2497:53;:::i;:::-;2487:63;;2443:117;2599:2;2625:53;2670:7;2661:6;2650:9;2646:22;2625:53;:::i;:::-;2615:63;;2570:118;2221:474;;;;;:::o;2701:118::-;2788:24;2806:5;2788:24;:::i;:::-;2783:3;2776:37;2701:118;;:::o;2825:222::-;2918:4;2956:2;2945:9;2941:18;2933:26;;2969:71;3037:1;3026:9;3022:17;3013:6;2969:71;:::i;:::-;2825:222;;;;:::o;3053:98::-;3104:6;3138:5;3132:12;3122:22;;3053:98;;;:::o;3157:168::-;3240:11;3274:6;3269:3;3262:19;3314:4;3309:3;3305:14;3290:29;;3157:168;;;;:::o;3331:307::-;3399:1;3409:113;3423:6;3420:1;3417:13;3409:113;;;3508:1;3503:3;3499:11;3493:18;3489:1;3484:3;3480:11;3473:39;3445:2;3442:1;3438:10;3433:15;;3409:113;;;3540:6;3537:1;3534:13;3531:101;;;3620:1;3611:6;3606:3;3602:16;3595:27;3531:101;3380:258;3331:307;;;:::o;3644:102::-;3685:6;3736:2;3732:7;3727:2;3720:5;3716:14;3712:28;3702:38;;3644:102;;;:::o;3752:360::-;3838:3;3866:38;3898:5;3866:38;:::i;:::-;3920:70;3983:6;3978:3;3920:70;:::i;:::-;3913:77;;3999:52;4044:6;4039:3;4032:4;4025:5;4021:16;3999:52;:::i;:::-;4076:29;4098:6;4076:29;:::i;:::-;4071:3;4067:39;4060:46;;3842:270;3752:360;;;;:::o;4118:419::-;4257:4;4295:2;4284:9;4280:18;4272:26;;4308:71;4376:1;4365:9;4361:17;4352:6;4308:71;:::i;:::-;4426:9;4420:4;4416:20;4411:2;4400:9;4396:18;4389:48;4454:76;4525:4;4516:6;4454:76;:::i;:::-;4446:84;;4118:419;;;;;:::o;4543:147::-;4644:11;4681:3;4666:18;;4543:147;;;;:::o;4696:373::-;4800:3;4828:38;4860:5;4828:38;:::i;:::-;4882:88;4963:6;4958:3;4882:88;:::i;:::-;4875:95;;4979:52;5024:6;5019:3;5012:4;5005:5;5001:16;4979:52;:::i;:::-;5056:6;5051:3;5047:16;5040:23;;4804:265;4696:373;;;;:::o;5075:427::-;5251:3;5273:93;5362:3;5353:6;5273:93;:::i;:::-;5266:100;;5383:93;5472:3;5463:6;5383:93;:::i;:::-;5376:100;;5493:3;5486:10;;5075:427;;;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.12;\r\n\r\nimport \"@openzeppelin/contracts/utils/Create2.sol\";\r\nimport \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\";\r\n\r\nimport \"./Discovery_Account/DiscoveryAccount.sol\";\r\n\r\n/**\r\n * A sample factory contract for DiscoveryAccount\r\n * A UserOperations \"initCode\" holds the address of the factory, and a method call (to createAccount, in this sample factory).\r\n * The factory's createAccount returns the target account address even if it is already installed.\r\n * This way, the entryPoint.getSenderAddress() can be called either before or after the account is created.\r\n */\r\ncontract DiscoveryAccountFactory {\r\n    DiscoveryAccount public immutable accountImplementation;\r\n\r\n    constructor(IEntryPoint _entryPoint) {\r\n        accountImplementation = new DiscoveryAccount(_entryPoint);\r\n    }\r\n\r\n    /**\r\n     * create an account, and return its address.\r\n     * returns the address even if the account is already deployed.\r\n     * Note that during UserOperation execution, this method is called only if the account is not deployed.\r\n     * This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation\r\n     */\r\n    function createAccount(address owner,uint256 salt) public returns (DiscoveryAccount ret) {\r\n        address addr = getAddress(owner, salt);\r\n        uint codeSize = addr.code.length;\r\n        if (codeSize > 0) {\r\n            return DiscoveryAccount(payable(addr));\r\n        }\r\n        ret = DiscoveryAccount(payable(new ERC1967Proxy{salt : bytes32(salt)}(\r\n                address(accountImplementation),\r\n                abi.encodeCall(DiscoveryAccount.initialize, (owner))\r\n            )));\r\n    }\r\n\r\n    /**\r\n     * calculate the counterfactual address of this account as it would be returned by createAccount()\r\n     */\r\n    function getAddress(address owner,uint256 salt) public view returns (address) {\r\n        return Create2.computeAddress(bytes32(salt), keccak256(abi.encodePacked(\r\n                type(ERC1967Proxy).creationCode,\r\n                abi.encode(\r\n                    address(accountImplementation),\r\n                    abi.encodeCall(DiscoveryAccount.initialize, (owner))\r\n                )\r\n            )));\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\hervi\\Documents\\Blockchain Projects\\ETHPrague2023\\Discovery-Wallet\\contracts\\DiscoveryAccountFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/DiscoveryAccountFactory.sol",
    "exportedSymbols": {
      "Address": [
        1127
      ],
      "BaseAccount": [
        3170
      ],
      "Create2": [
        1208
      ],
      "DiscoveryAccount": [
        3700
      ],
      "DiscoveryAccountFactory": [
        3028
      ],
      "ECDSA": [
        1913
      ],
      "ERC1967Proxy": [
        67
      ],
      "ERC1967Upgrade": [
        371
      ],
      "IAccount": [
        4079
      ],
      "IAggregator": [
        4113
      ],
      "IBeacon": [
        433
      ],
      "IERC1155Receiver": [
        759
      ],
      "IERC165": [
        1925
      ],
      "IERC1822Proxiable": [
        30
      ],
      "IERC1967": [
        20
      ],
      "IERC721Receiver": [
        777
      ],
      "IERC777Recipient": [
        797
      ],
      "IEntryPoint": [
        4317
      ],
      "INonceManager": [
        4336
      ],
      "IStakeManager": [
        4441
      ],
      "Initializable": [
        602
      ],
      "Math": [
        2791
      ],
      "Proxy": [
        423
      ],
      "SignedMath": [
        2896
      ],
      "StorageSlot": [
        1318
      ],
      "Strings": [
        1547
      ],
      "TokenCallbackHandler": [
        3824
      ],
      "UUPSUpgradeable": [
        718
      ],
      "UserOperation": [
        4468
      ],
      "UserOperationLib": [
        4638
      ],
      "ValidationData": [
        3833
      ],
      "_intersectTimeRange": [
        3977
      ],
      "_packValidationData": [
        4014,
        4052
      ],
      "_parseValidationData": [
        3892
      ],
      "calldataKeccak": [
        4062
      ]
    },
    "id": 3029,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2898,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:24:19"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Create2.sol",
        "file": "@openzeppelin/contracts/utils/Create2.sol",
        "id": 2899,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3029,
        "sourceUnit": 1209,
        "src": "65:51:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "id": 2900,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3029,
        "sourceUnit": 68,
        "src": "118:64:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Discovery_Account/DiscoveryAccount.sol",
        "file": "./Discovery_Account/DiscoveryAccount.sol",
        "id": 2901,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3029,
        "sourceUnit": 3701,
        "src": "186:50:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "DiscoveryAccountFactory",
        "contractDependencies": [
          67,
          3700
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2902,
          "nodeType": "StructuredDocumentation",
          "src": "240:396:19",
          "text": " A sample factory contract for DiscoveryAccount\n A UserOperations \"initCode\" holds the address of the factory, and a method call (to createAccount, in this sample factory).\n The factory's createAccount returns the target account address even if it is already installed.\n This way, the entryPoint.getSenderAddress() can be called either before or after the account is created."
        },
        "fullyImplemented": true,
        "id": 3028,
        "linearizedBaseContracts": [
          3028
        ],
        "name": "DiscoveryAccountFactory",
        "nameLocation": "647:23:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "11464fbe",
            "id": 2905,
            "mutability": "immutable",
            "name": "accountImplementation",
            "nameLocation": "712:21:19",
            "nodeType": "VariableDeclaration",
            "scope": 3028,
            "src": "678:55:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DiscoveryAccount_$3700",
              "typeString": "contract DiscoveryAccount"
            },
            "typeName": {
              "id": 2904,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2903,
                "name": "DiscoveryAccount",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3700,
                "src": "678:16:19"
              },
              "referencedDeclaration": 3700,
              "src": "678:16:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DiscoveryAccount_$3700",
                "typeString": "contract DiscoveryAccount"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2919,
              "nodeType": "Block",
              "src": "779:76:19",
              "statements": [
                {
                  "expression": {
                    "id": 2917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2911,
                      "name": "accountImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2905,
                      "src": "790:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DiscoveryAccount_$3700",
                        "typeString": "contract DiscoveryAccount"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2915,
                          "name": "_entryPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2908,
                          "src": "835:11:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEntryPoint_$4317",
                            "typeString": "contract IEntryPoint"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IEntryPoint_$4317",
                            "typeString": "contract IEntryPoint"
                          }
                        ],
                        "id": 2914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "814:20:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IEntryPoint_$4317_$returns$_t_contract$_DiscoveryAccount_$3700_$",
                          "typeString": "function (contract IEntryPoint) returns (contract DiscoveryAccount)"
                        },
                        "typeName": {
                          "id": 2913,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2912,
                            "name": "DiscoveryAccount",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3700,
                            "src": "818:16:19"
                          },
                          "referencedDeclaration": 3700,
                          "src": "818:16:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DiscoveryAccount_$3700",
                            "typeString": "contract DiscoveryAccount"
                          }
                        }
                      },
                      "id": 2916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "814:33:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DiscoveryAccount_$3700",
                        "typeString": "contract DiscoveryAccount"
                      }
                    },
                    "src": "790:57:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DiscoveryAccount_$3700",
                      "typeString": "contract DiscoveryAccount"
                    }
                  },
                  "id": 2918,
                  "nodeType": "ExpressionStatement",
                  "src": "790:57:19"
                }
              ]
            },
            "id": 2920,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2908,
                  "mutability": "mutable",
                  "name": "_entryPoint",
                  "nameLocation": "766:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2920,
                  "src": "754:23:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$4317",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 2907,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2906,
                      "name": "IEntryPoint",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4317,
                      "src": "754:11:19"
                    },
                    "referencedDeclaration": 4317,
                    "src": "754:11:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$4317",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "753:25:19"
            },
            "returnParameters": {
              "id": 2910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "779:0:19"
            },
            "scope": 3028,
            "src": "742:113:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2984,
              "nodeType": "Block",
              "src": "1332:410:19",
              "statements": [
                {
                  "assignments": [
                    2932
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2932,
                      "mutability": "mutable",
                      "name": "addr",
                      "nameLocation": "1351:4:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2984,
                      "src": "1343:12:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2931,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1343:7:19",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2937,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2934,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2923,
                        "src": "1369:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2935,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2925,
                        "src": "1376:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2933,
                      "name": "getAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3027,
                      "src": "1358:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (address,uint256) view returns (address)"
                      }
                    },
                    "id": 2936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1358:23:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1343:38:19"
                },
                {
                  "assignments": [
                    2939
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2939,
                      "mutability": "mutable",
                      "name": "codeSize",
                      "nameLocation": "1397:8:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2984,
                      "src": "1392:13:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2938,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1392:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2943,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 2940,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2932,
                        "src": "1408:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "code",
                      "nodeType": "MemberAccess",
                      "src": "1408:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "id": 2942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1408:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1392:32:19"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2944,
                      "name": "codeSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2939,
                      "src": "1439:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1450:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1439:12:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2955,
                  "nodeType": "IfStatement",
                  "src": "1435:83:19",
                  "trueBody": {
                    "id": 2954,
                    "nodeType": "Block",
                    "src": "1453:65:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2950,
                                  "name": "addr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2932,
                                  "src": "1500:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2949,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1492:8:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 2948,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1492:8:19",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2951,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1492:13:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 2947,
                            "name": "DiscoveryAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3700,
                            "src": "1475:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_DiscoveryAccount_$3700_$",
                              "typeString": "type(contract DiscoveryAccount)"
                            }
                          },
                          "id": 2952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1475:31:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DiscoveryAccount_$3700",
                            "typeString": "contract DiscoveryAccount"
                          }
                        },
                        "functionReturnParameters": 2930,
                        "id": 2953,
                        "nodeType": "Return",
                        "src": "1468:38:19"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2956,
                      "name": "ret",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2929,
                      "src": "1528:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DiscoveryAccount_$3700",
                        "typeString": "contract DiscoveryAccount"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 2970,
                                      "name": "accountImplementation",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2905,
                                      "src": "1624:21:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_DiscoveryAccount_$3700",
                                        "typeString": "contract DiscoveryAccount"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_DiscoveryAccount_$3700",
                                        "typeString": "contract DiscoveryAccount"
                                      }
                                    ],
                                    "id": 2969,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1616:7:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2968,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1616:7:19",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2971,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1616:30:19",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 2974,
                                        "name": "DiscoveryAccount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3700,
                                        "src": "1680:16:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_DiscoveryAccount_$3700_$",
                                          "typeString": "type(contract DiscoveryAccount)"
                                        }
                                      },
                                      "id": 2975,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "initialize",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3404,
                                      "src": "1680:27:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                        "typeString": "function DiscoveryAccount.initialize(address)"
                                      }
                                    },
                                    {
                                      "components": [
                                        {
                                          "id": 2976,
                                          "name": "owner",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2923,
                                          "src": "1710:5:19",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "id": 2977,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "1709:7:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                        "typeString": "function DiscoveryAccount.initialize(address)"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2972,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "1665:3:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 2973,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encodeCall",
                                    "nodeType": "MemberAccess",
                                    "src": "1665:14:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 2978,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1665:52:19",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 2962,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "1559:16:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$67_$",
                                    "typeString": "function (address,bytes memory) payable returns (contract ERC1967Proxy)"
                                  },
                                  "typeName": {
                                    "id": 2961,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 2960,
                                      "name": "ERC1967Proxy",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 67,
                                      "src": "1563:12:19"
                                    },
                                    "referencedDeclaration": 67,
                                    "src": "1563:12:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC1967Proxy_$67",
                                      "typeString": "contract ERC1967Proxy"
                                    }
                                  }
                                },
                                "id": 2967,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "names": [
                                  "salt"
                                ],
                                "nodeType": "FunctionCallOptions",
                                "options": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 2965,
                                        "name": "salt",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2925,
                                        "src": "1591:4:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 2964,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1583:7:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 2963,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1583:7:19",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2966,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1583:13:19",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "src": "1559:38:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$67_$salt",
                                  "typeString": "function (address,bytes memory) payable returns (contract ERC1967Proxy)"
                                }
                              },
                              "id": 2979,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1559:173:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC1967Proxy_$67",
                                "typeString": "contract ERC1967Proxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC1967Proxy_$67",
                                "typeString": "contract ERC1967Proxy"
                              }
                            ],
                            "id": 2959,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1551:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 2958,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1551:8:19",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1551:182:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 2957,
                        "name": "DiscoveryAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3700,
                        "src": "1534:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DiscoveryAccount_$3700_$",
                          "typeString": "type(contract DiscoveryAccount)"
                        }
                      },
                      "id": 2981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1534:200:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DiscoveryAccount_$3700",
                        "typeString": "contract DiscoveryAccount"
                      }
                    },
                    "src": "1528:206:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DiscoveryAccount_$3700",
                      "typeString": "contract DiscoveryAccount"
                    }
                  },
                  "id": 2983,
                  "nodeType": "ExpressionStatement",
                  "src": "1528:206:19"
                }
              ]
            },
            "documentation": {
              "id": 2921,
              "nodeType": "StructuredDocumentation",
              "src": "863:374:19",
              "text": " create an account, and return its address.\n returns the address even if the account is already deployed.\n Note that during UserOperation execution, this method is called only if the account is not deployed.\n This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation"
            },
            "functionSelector": "5fbfb9cf",
            "id": 2985,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createAccount",
            "nameLocation": "1252:13:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2923,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1274:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2985,
                  "src": "1266:13:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2922,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1266:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2925,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "1288:4:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2985,
                  "src": "1280:12:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2924,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1280:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1265:28:19"
            },
            "returnParameters": {
              "id": 2930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2929,
                  "mutability": "mutable",
                  "name": "ret",
                  "nameLocation": "1327:3:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2985,
                  "src": "1310:20:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DiscoveryAccount_$3700",
                    "typeString": "contract DiscoveryAccount"
                  },
                  "typeName": {
                    "id": 2928,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2927,
                      "name": "DiscoveryAccount",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3700,
                      "src": "1310:16:19"
                    },
                    "referencedDeclaration": 3700,
                    "src": "1310:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DiscoveryAccount_$3700",
                      "typeString": "contract DiscoveryAccount"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1309:22:19"
            },
            "scope": 3028,
            "src": "1243:499:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3026,
              "nodeType": "Block",
              "src": "1950:333:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2999,
                            "name": "salt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2990,
                            "src": "1999:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1991:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 2997,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1991:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1991:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 3005,
                                      "name": "ERC1967Proxy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 67,
                                      "src": "2056:12:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC1967Proxy_$67_$",
                                        "typeString": "type(contract ERC1967Proxy)"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_contract$_ERC1967Proxy_$67_$",
                                        "typeString": "type(contract ERC1967Proxy)"
                                      }
                                    ],
                                    "id": 3004,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967269,
                                    "src": "2051:4:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 3006,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2051:18:19",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_contract$_ERC1967Proxy_$67",
                                    "typeString": "type(contract ERC1967Proxy)"
                                  }
                                },
                                "id": 3007,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "creationCode",
                                "nodeType": "MemberAccess",
                                "src": "2051:31:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 3012,
                                        "name": "accountImplementation",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2905,
                                        "src": "2142:21:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_DiscoveryAccount_$3700",
                                          "typeString": "contract DiscoveryAccount"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_DiscoveryAccount_$3700",
                                          "typeString": "contract DiscoveryAccount"
                                        }
                                      ],
                                      "id": 3011,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2134:7:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 3010,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2134:7:19",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 3013,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2134:30:19",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 3016,
                                          "name": "DiscoveryAccount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3700,
                                          "src": "2202:16:19",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_DiscoveryAccount_$3700_$",
                                            "typeString": "type(contract DiscoveryAccount)"
                                          }
                                        },
                                        "id": 3017,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "initialize",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3404,
                                        "src": "2202:27:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                          "typeString": "function DiscoveryAccount.initialize(address)"
                                        }
                                      },
                                      {
                                        "components": [
                                          {
                                            "id": 3018,
                                            "name": "owner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2988,
                                            "src": "2232:5:19",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "id": 3019,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "2231:7:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                          "typeString": "function DiscoveryAccount.initialize(address)"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "id": 3014,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967295,
                                        "src": "2187:3:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 3015,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encodeCall",
                                      "nodeType": "MemberAccess",
                                      "src": "2187:14:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 3020,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2187:52:19",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3008,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967295,
                                    "src": "2101:3:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 3009,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "2101:10:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 3021,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2101:157:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 3002,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967295,
                                "src": "2016:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 3003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2016:16:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 3022,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2016:257:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 3001,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "2006:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 3023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2006:268:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 2995,
                        "name": "Create2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1208,
                        "src": "1968:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Create2_$1208_$",
                          "typeString": "type(library Create2)"
                        }
                      },
                      "id": 2996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "computeAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1193,
                      "src": "1968:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes32) view returns (address)"
                      }
                    },
                    "id": 3024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1968:307:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2994,
                  "id": 3025,
                  "nodeType": "Return",
                  "src": "1961:314:19"
                }
              ]
            },
            "documentation": {
              "id": 2986,
              "nodeType": "StructuredDocumentation",
              "src": "1750:116:19",
              "text": " calculate the counterfactual address of this account as it would be returned by createAccount()"
            },
            "functionSelector": "8cb84e18",
            "id": 3027,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddress",
            "nameLocation": "1881:10:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2988,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1900:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3027,
                  "src": "1892:13:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2987,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1892:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2990,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "1914:4:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3027,
                  "src": "1906:12:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2989,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1906:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1891:28:19"
            },
            "returnParameters": {
              "id": 2994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2993,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3027,
                  "src": "1941:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2992,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1941:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1940:9:19"
            },
            "scope": 3028,
            "src": "1872:411:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3029,
        "src": "638:1648:19",
        "usedErrors": []
      }
    ],
    "src": "37:2249:19"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.12+commit.f00d7308.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.12",
  "updatedAt": "2023-06-10T15:23:30.692Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "createAccount(address,uint256)": {
        "notice": "create an account, and return its address. returns the address even if the account is already deployed. Note that during UserOperation execution, this method is called only if the account is not deployed. This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation"
      },
      "getAddress(address,uint256)": {
        "notice": "calculate the counterfactual address of this account as it would be returned by createAccount()"
      }
    },
    "notice": "A sample factory contract for DiscoveryAccount A UserOperations \"initCode\" holds the address of the factory, and a method call (to createAccount, in this sample factory). The factory's createAccount returns the target account address even if it is already installed. This way, the entryPoint.getSenderAddress() can be called either before or after the account is created.",
    "version": 1
  }
}